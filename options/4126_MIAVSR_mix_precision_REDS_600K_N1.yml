name: 4126_MIAVSR_mix_precision_REDS_600K_N1
model_type: RecurrentMixPrecisionRTModel
scale: 4
num_gpu: 8  # official: 8 GPUs
manual_seed: 0
find_unused_parameters: false
use_static_graph: true
# dataset and data loader settings
datasets:
  train:
    name: REDS
    type: REDSRecurrentDataset
    dataroot_gt: /data0/zhouxingyu/REDS/train/train_sharp
    dataroot_lq: /data0/zhouxingyu/REDS/train/train_sharp_bicubic/X4
    meta_info_file: /data1/home/zhouxingyu/zhouxingyu_vsr/MIA-VSR/data/meta_info_REDS_GT.txt
    val_partition: REDS4  # set to 'official' when use the official validation partition
    test_mode: False
    io_backend:
      type: disk

    num_frame: 16
    gt_size: 256
    interval_list: [1]
    random_reverse: false
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 6
    batch_size_per_gpu: 3
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: REDS4
    type: VideoRecurrentTestDataset
    dataroot_gt: /data0/zhouxingyu/REDS4/gt
    dataroot_lq: /data0/zhouxingyu/REDS4/sharp_bicubic

    cache_data: true
    io_backend:
      type: disk

    num_frame: -1  # not needed

# network structures
network_g:
  type: MIAVSR
  mid_channels: 64
  embed_dim: 120
  depths: [6,6,6,6]
  num_heads: [6,6,6,6]
  window_size: [3, 8, 8]
  num_frames: 3
  img_size : 64
  patch_size : 1
  cpu_cache_length: 100
  is_low_res_input: True
  use_mask: True #False, may be you should pretrain this model with no mask processing module
  spynet_path: experiments/pretrained_models/flownet/spynet_sintel_final-3d2a1287.pth

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: CosineAnnealingRestartLR
    periods: [600000]
    restart_weights: [1]
    eta_min: !!float 1e-7

  total_iter: 600000
  warmup_iter: -1  # no warm up
  fix_flow: 5000 #-1 no fix flow
  flow_lr_mul: 0.125

  # losses
  pixel_opt:
    type: CharbonnierLoss
    loss_weight: 1.0
    reduction: mean
  sparsity_target:  
    type: SparsityLoss

# validation settings
val:
  val_freq: !!float 5e3
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500


